generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId     String
  owner       User     @relation("ownedTeams", fields: [ownerId], references: [id], onDelete: Cascade)
  members     User[]   @relation("TeamMembers")
  embeds      EmbedConfiguration[]
}

model User {
  id                   String               @id @default(cuid())
  email                String               @unique
  hashedPassword       String?
  name                 String?
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  emailVerified        DateTime?
  resetPasswordExpires DateTime?
  resetPasswordToken   String?              @unique
  verificationToken    String?              @unique
  apiKeys              ApiKey[]
  teams                Team[]               @relation("TeamMembers")
  ownedTeams           Team[]               @relation("ownedTeams")
}

model ApiKey {
  id           String               @id @default(cuid())
  userId       String
  vendor       String
  apiKey       String
  name         String?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  user         User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  embedConfigs EmbedConfiguration[]

  @@unique([userId, vendor, name])
}

model EmbedConfiguration {
  id           String   @id @default(cuid())
  teamId       String
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  apiKeyId     String
  modelVendor  String
  modelName    String
  systemPrompt String?
  theme        String   @default("light")
  primaryColor String?
  apiKey       ApiKey   @relation(fields: [apiKeyId], references: [id])
  team         Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@unique([teamId, name])
}
